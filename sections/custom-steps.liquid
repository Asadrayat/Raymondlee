{% assign id = section.id %}
<style>
       .section-container--{{ section.id }}{
         margin-top: {{ section.settings.margin_top | append:'px' }};
         margin-bottom: {{ section.settings.margin_bottom | append:'px' }};
         padding-top: {{ section.settings.padding_top | append:'px' }};
         padding-bottom: {{ section.settings.padding_bottom | append:'px' }};
         overflow: hidden;
         {% comment %} background: #FEF9F2; {% endcomment %}
       }
      .info-{{ id }} {
          position: relative;
          z-index: 4;
      }
      .info-{{ id }} h3{
        color: var(--Color-Dark-500, #0B0404);
        margin: 0;
        font-family: Prata;
        font-size: 30px;
        font-style: normal;
        font-weight: 400;
        line-height: 140%; /* 42px */
        letter-spacing: -0.6px;
      }
      .info-{{ id }} p{
        color: var(--Color-Gray-700, #44403C);
        margin: 0;
        font-family: Lato;
        font-size: 16px;
        font-style: normal;
        font-weight: 400;
        line-height: 150%; /* 24px */
      }

      .container-{{ id }}{
        em {
            font-style: normal;
            display: block;
            @media(max-width: 600px){
                display: unset;
            }
        }
      }
      .container-{{ id }} .btn-wrapper{
        display: flex;
        justify-content: flex-end;
        gap: 12px;
        width: max-content;
        position: absolute;
        top: 0;
        right: 0;
        transform: translate(0,-110px);
        z-index: 3;
            @media(max-width: 768px){
        transform: translate(0,-88px);
            }
      }
      .card-{{ id }} .content__wrapper{
        display: flex;
        padding: 32px;
        flex-direction: column;
        align-items: flex-start;
        gap: 132px;
        border: 1px solid var(--Color-Gray-200, #E7E5E4);
        @media(max-width: 1100px){
            gap: 70px;
        }
      }
    .card-{{ id }} .text--wrapper {
        display: flex;
        /* width: 348px; */
        /* height: 138px; */
        flex-direction: column;
        align-items: flex-start;
        gap: 24px;
    }
      .card-{{ id }} .count--wrapper {
        display: flex;
        width: 84px;
        height: 84px;
        padding: 25px 20px;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        gap: 10px;
        border-radius: 42px;
        background: #aa72480f;
        color: #AA7248;
        margin: 0;
        box-sizing: border-box;
      }
      .card-{{ id }} .count--wrapper p{
        color: #AA7248;
        font-family: Prata;
        font-size: 42.857px;
        font-style: normal;
        font-weight: 400;
        line-height: 140%;
        letter-spacing: -0.857px;
        margin: 0;
      }
      .card-{{ id }} .rte{
        color: var(--Color-Gray-700, #44403C);
        margin: 0;
        font-family: Lato;
        font-size: 16px;
        font-style: normal;
        font-weight: 400;
        line-height: 150%; /* 24px */
      }
    .section-container--{{ id }} .hero_slider__nav_icon {
          width: 48px;
          height: 48px;
          display: flex;
          background: #AA7248;
          line-height: 1;
          border: 1px solid #E7E5E4;
          top: unset;
          z-index: 1;
          color: #fff;
          border-radius: 50%;
          align-items: center;
          justify-content: center;
          cursor: pointer;
       @media(max-width: 600px) {
         {% comment %} display: none; {% endcomment %}
       }
    }
    .section-container--{{ id }} .hero_slider__nav_icon svg path {
      stroke: currentColor;
    }
    .section-container--{{ id }} .hero_slider__nav_icon.swiper-button-disabled {
      background: #ffffff47;
      backdrop-filter: blur(10px);
      color: #000;
    }
    {% comment %} .info-wrapper-{{ id }} {
      overflow: unset;
    } {% endcomment %}
    .swiper__btn__wrap {
      display: flex;
      gap: 16px;
      align-items: center;
      position: absolute;
      bottom: var(--Spacing-Container-xl);
      right: var(--Spacing-Container-xl);
    }
    .prev-{{ section.id }}.hero_slider__nav_icon {
      position: relative;
    }
    .next-{{ section.id }}.hero_slider__nav_icon {
      position: relative;
    }
     @media screen and (max-width: 768px){
       .section-container--{{ section.id }}{
         margin-top: {{ section.settings.margin_top_mobile | append:'px' }};
         margin-bottom: {{ section.settings.margin_bottom_mobile | append:'px'  }};
         padding-top: {{ section.settings.padding_top_mobile | append:'px' }};
         padding-bottom: {{ section.settings.padding_bottom_mobile | append:'px' }};
       }
    }


    .section-container--{{ id }}{
    .--section-title{
        color: var(--Color-Dark-500, #0B0404);

        /* sm/Regular */
        font-family: Prata;
        font-size: 30px;
        font-style: normal;
        font-weight: 400;
        line-height: 140%; /* 42px */
        letter-spacing: -0.6px;
            margin: 0 0 40px;
        @media(max-width: 768px){
            font-size: 24px;
            margin: 0 0 32px;
        }
        @media(max-width: 600px){
           max-width: 69%;
        }
    }


    }
</style>
<section class="section-container--{{ id }}">
  <div class="container-{{ id }} page-width">
    <h2 class="--section-title">{{ section.settings.title }}</h2>
    <div class="info-{{ id }}">
      <div class="swiper info-wrapper-{{ id }}">
        <div class="swiper-wrapper">
          {% for block in section.blocks %}
            <div class="card-{{ id }} swiper-slide">
              <div class="content__wrapper">
                <div class="count--wrapper">
                    <p>0{{ forloop.index }}</p>
                </div>
                <div class="text--wrapper">
                    <h3>{{ block.settings.title }}</h3>
                    <div class="rte">{{ block.settings.desc }}</div>
                </div>
              </div>
            </div>
          {% endfor %}
        </div>
      </div>
      <div class="btn-wrapper">
        <div class=" prev-{{ section.id }} hero_slider__nav_icon">{% render 'all-icons', name: 'left_arrow' %}</div>
        <div class=" next-{{ section.id }} hero_slider__nav_icon">{% render 'all-icons', name: 'right_arrow' %}</div>
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', (event) => {
    new Swiper('.info-wrapper-{{ id }}', {
      slidesPerView: 1,
      spaceBetween: 16,
      breakpoints: {
        // when window width is >= 320px
        320: {
          slidesPerView: 1,
          spaceBetween: 16,
        },
        // when window width is >= 640px
        768: {
          slidesPerView: 2,
          spaceBetween: 32,
        },
        1040: {
          slidesPerView: 3,
          spaceBetween: 32,
        },
      },
      navigation: {
        nextEl: '.next-{{ section.id }}',
        prevEl: '.prev-{{ section.id }}',
      },
    });
  });
</script>


<script>
function setEqualHeightv2(selector) {
  let divs = document.querySelectorAll(selector);
  let max = 0;
  // First pass: Calculate the maximum height
  divs.forEach((div) => {
    // let height = div.clientHeight;
    let temp = window.getComputedStyle(div);
    let height = parseFloat(temp.getPropertyValue("height"));
    
    if (height > max) {
      console.log("Height: ", height, " Max: ", max)
      max = height;
    } else {
      console.log("Lesser Height: ", height, " Max: ", max)
    }
  });
  // Second pass: Set all divs to the max height
  divs.forEach((div) => {
    console.log( "Set  Max: ", max)
    // console.log("Yo Yo")
    div.style.height = `${max}px`;
  });
}
// window.onload = () => {
//   // setEqualHeightv2(".card-title--hs");
//   setEqualHeightv2(".section-container--{{ section.id }} .card-information--hs");
// };

document.addEventListener("DOMContentLoaded", () => {
  setEqualHeightv2(".section-container--{{ section.id }} .text--wrapper");
});
</script>

{% schema %}
{
  "name": "Custom Steps",
  "settings": [
    {
      "type": "inline_richtext",
      "id": "title",
      "label": "title"
    },
    {
      "type": "header",
      "content": "Desktop Spacing"
    },
    {
      "type": "range",
      "id": "margin_top",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Margin Top",
      "default": 0
    },
    {
      "type": "range",
      "id": "margin_bottom",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Margin Bottom",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_top",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Padding Top",
      "default": 50
    },
    {
      "type": "range",
      "id": "padding_bottom",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Padding Bottom",
      "default": 50
    },
    {
      "type": "header",
      "content": "Mobile Spacing"
    },
    {
      "type": "range",
      "id": "margin_top_mobile",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Margin Top (Mobile)",
      "default": 0
    },
    {
      "type": "range",
      "id": "margin_bottom_mobile",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Margin Bottom (Mobile)",
      "default": 0
    },
    {
      "type": "range",
      "id": "padding_top_mobile",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Padding Top  (Mobile)",
      "default": 20
    },
    {
      "type": "range",
      "id": "padding_bottom_mobile",
      "min": 0,
      "max": 200,
      "step": 2,
      "unit": "px",
      "label": "Padding Bottom  (Mobile)",
      "default": 20
    }
  ],
  "blocks": [
    {
      "name": "review",
      "type": "text",
      "settings": [
        {
          "type": "text",
          "id": "title",
          "label": "Title"
        },
        {
          "type": "richtext",
          "id": "desc",
          "label": "Description"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Custom Steps"
    }
  ]
}
{% endschema %}
