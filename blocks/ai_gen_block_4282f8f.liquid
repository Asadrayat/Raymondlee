{% doc %}
  @prompt
    generate a multicolumn section.
    where it can be eighter grid or slider.
    and for every block it will have image title and description. and threr will be option to alignment of content and control the size of image

{% enddoc %}
{% assign ai_gen_id = block.id | replace: '_', '' | downcase %}

{% style %}
  .ai-multicolumn-{{ ai_gen_id }} {
    padding: {{ block.settings.section_padding_top }}px 0 {{ block.settings.section_padding_bottom }}px;
    background-color: {{ block.settings.background_color }};}

  .ai-multicolumn-container-{{ ai_gen_id }} {
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 20px;
  }

  .ai-multicolumn-heading-{{ ai_gen_id }} {
    text-align: {{ block.settings.heading_alignment }};
    margin-bottom: 40px;
    color: {{ block.settings.text_color }};
    font-size: {{ block.settings.heading_size }}px;
  }

  .ai-multicolumn-grid-{{ ai_gen_id }} {
    display: grid;
    grid-template-columns: repeat({{ block.settings.columns_desktop }}, 1fr);
    gap: {{ block.settings.column_gap }}px;}

  .ai-multicolumn-slider-{{ ai_gen_id }} {
    display: flex;
    gap: {{ block.settings.column_gap }}px;overflow-x: auto;
    scroll-snap-type: x mandatory;
    scrollbar-width: none;
    -ms-overflow-style: none;
  }

  .ai-multicolumn-slider-{{ ai_gen_id }}::-webkit-scrollbar {
    display: none;
  }

  .ai-multicolumn-item-{{ ai_gen_id }} {
    text-align: {{ block.settings.content_alignment }};
    scroll-snap-align: start;
  }

  .ai-multicolumn-grid-{{ ai_gen_id }} .ai-multicolumn-item-{{ ai_gen_id }} {
    min-width: auto;
  }

  .ai-multicolumn-slider-{{ ai_gen_id }} .ai-multicolumn-item-{{ ai_gen_id }} {
    flex: 0 0 {{ block.settings.slide_width }}px;
  }

  .ai-multicolumn-image-wrapper-{{ ai_gen_id }} {
    width: {{ block.settings.image_width }}px;
    height: {{ block.settings.image_height }}px;
    margin: 0 auto {{ block.settings.image_spacing }}px;
    border-radius: {{ block.settings.image_border_radius }}px;
    overflow: hidden;
  }

  .ai-multicolumn-image-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    object-fit: cover;
  }

  .ai-multicolumn-image-placeholder-{{ ai_gen_id }} {
    width: 100%;
    height: 100%;
    background-color: #f4f4f4;
    display: flex;
    align-items: center;
    justify-content: center;
    position: relative;
  }

  .ai-multicolumn-image-placeholder-{{ ai_gen_id }} svg {
    width: 60%;
    height: 60%;
    opacity: 0.3;
  }

  .ai-multicolumn-empty-state-{{ ai_gen_id }} {
    position: absolute;
    bottom: 10px;
    left: 50%;
    transform: translateX(-50%);
    font-size: 12px;
    color: #666;
    text-align: center;
    pointer-events: none;
  }

  .ai-multicolumn-title-{{ ai_gen_id }} {
    font-size: {{ block.settings.title_size }}px;
    font-weight: 600;
    margin-bottom: 8px;
    color: {{ block.settings.text_color }};
  }

  .ai-multicolumn-description-{{ ai_gen_id }} {
    font-size: {{ block.settings.description_size }}px;
    line-height: 1.5;
    color: {{ block.settings.text_color }};
    opacity: 0.8;
  }

  .ai-multicolumn-slider-controls-{{ ai_gen_id }} {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin-top: 30px;
  }

  .ai-multicolumn-nav-button-{{ ai_gen_id }} {
    width: 40px;
    height: 40px;
    border: 1px solid {{ block.settings.text_color }};
    background: transparent;
    border-radius: 50%;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    color: {{ block.settings.text_color }};
    transition: all 0.3s ease;
  }

  .ai-multicolumn-nav-button-{{ ai_gen_id }}:hover {
    background-color: {{ block.settings.text_color }};
    color: {{ block.settings.background_color }};
  }

  .ai-multicolumn-nav-button-{{ ai_gen_id }}:disabled {
    opacity: 0.3;
    cursor: not-allowed;
  }

  .ai-multicolumn-nav-button-{{ ai_gen_id }}:disabled:hover {
    background: transparent;
    color: {{ block.settings.text_color }};
  }

  @media screen and (max-width: 768px) {
    .ai-multicolumn-grid-{{ ai_gen_id }} {
      grid-template-columns: repeat({{ block.settings.columns_mobile }}, 1fr);
    }

    .ai-multicolumn-slider-{{ ai_gen_id }} .ai-multicolumn-item-{{ ai_gen_id }} {
      flex: 0 0 {{ block.settings.slide_width_mobile }}px;
    }

    .ai-multicolumn-image-wrapper-{{ ai_gen_id }} {
      width: {{ block.settings.image_width | times: 0.8 }}px;
      height: {{ block.settings.image_height | times: 0.8 }}px;
    }
  }
{% endstyle %}

<multicolumn-section-{{ ai_gen_id }}
  class="ai-multicolumn-{{ ai_gen_id }}"
  data-layout="{{ block.settings.layout_type }}"
  {{ block.shopify_attributes }}
>
  <div class="ai-multicolumn-container-{{ ai_gen_id }}">
    {% if block.settings.heading != blank %}
      <h2 class="ai-multicolumn-heading-{{ ai_gen_id }}">{{ block.settings.heading }}</h2>
    {% endif %}<div class="ai-multicolumn-wrapper-{{ ai_gen_id }}">
      <div class="ai-multicolumn-content-{{ ai_gen_id }} {% if block.settings.layout_type == 'grid' %}ai-multicolumn-grid-{{ ai_gen_id }}{% else %}ai-multicolumn-slider-{{ ai_gen_id }}{% endif %}">
        {% for i in (1..6) %}
          {% liquid
            assign image_key = 'column_' | append: i | append: '_image'
            assign title_key = 'column_' | append: i | append: '_title'
            assign description_key = 'column_' | append: i | append: '_description'
            assign enabled_key = 'column_' | append: i | append: '_enabled'

            assign column_image = block.settings[image_key]
            assign column_title = block.settings[title_key]
            assign column_description = block.settings[description_key]
            assign column_enabled = block.settings[enabled_key]
          %}

          {% if column_enabled %}
            <div class="ai-multicolumn-item-{{ ai_gen_id }}" data-column="{{ i }}">
              <div class="ai-multicolumn-image-wrapper-{{ ai_gen_id }}">
                {% if column_image %}
                  <img
                    src="{{ column_image | image_url: width: 400 }}"
                    alt="{{ column_image.alt | escape }}"
                    class="ai-multicolumn-image-{{ ai_gen_id }}"
                loading="lazy"width="400"
                    height="400"
                  >
                {% else %}
                  <div class="ai-multicolumn-image-placeholder-{{ ai_gen_id }}">
                    {{ 'image' | placeholder_svg_tag }}
                    <div class="ai-multicolumn-empty-state-{{ ai_gen_id }}">
                      Add image
                    </div>
                  </div>
                {% endif %}
              </div>

              {% if column_title != blank %}
                <h3 class="ai-multicolumn-title-{{ ai_gen_id }}">{{ column_title }}</h3>
              {% endif %}

              {% if column_description != blank %}
                <div class="ai-multicolumn-description-{{ ai_gen_id }}">{{ column_description }}</div>
              {% endif %}
            </div>
          {% endif %}
        {% endfor %}
      </div>

      {% if block.settings.layout_type == 'slider' %}
        <div class="ai-multicolumn-slider-controls-{{ ai_gen_id }}">
          <button class="ai-multicolumn-nav-button-{{ ai_gen_id }} ai-multicolumn-prev-{{ ai_gen_id }}" aria-label="Previous slide">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="15,18 9,12 15,6"></polyline>
            </svg>
          </button>
          <button class="ai-multicolumn-nav-button-{{ ai_gen_id }} ai-multicolumn-next-{{ ai_gen_id }}" aria-label="Next slide">
            <svg width="16" height="16" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2">
              <polyline points="9,18 15,12 9,6"></polyline>
            </svg>
          </button>
        </div>
      {% endif %}
    </div>
  </div>
</multicolumn-section-{{ ai_gen_id }}>

<script>
  (function() {
    class MulticolumnSection{{ ai_gen_id }} extends HTMLElement {
      constructor() {
        super();
      }

      connectedCallback() {
        this.slider = this.querySelector('.ai-multicolumn-slider-{{ ai_gen_id }}');
        this.prevButton = this.querySelector('.ai-multicolumn-prev-{{ ai_gen_id }}');
        this.nextButton = this.querySelector('.ai-multicolumn-next-{{ ai_gen_id }}');
        if (this.dataset.layout === 'slider') {
          this.setupSlider();
        }
      }

      setupSlider() {
        if (!this.slider) return;

        this.slideWidth = {{ block.settings.slide_width }} + {{ block.settings.column_gap }};
        this.currentPosition = 0;
        this.maxScroll = this.slider.scrollWidth - this.slider.clientWidth;

        this.prevButton.addEventListener('click', () => this.previousSlide());
        this.nextButton.addEventListener('click', () => this.nextSlide());

        this.slider.addEventListener('scroll', () => this.updateButtons());
        this.updateButtons();
      }

      previousSlide() {
        this.currentPosition = Math.max(0, this.currentPosition - this.slideWidth);
        this.slider.scrollTo({
          left: this.currentPosition,
          behavior: 'smooth'
        });
      }

      nextSlide() {
        this.currentPosition = Math.min(this.maxScroll, this.currentPosition + this.slideWidth);
        this.slider.scrollTo({
          left: this.currentPosition,
          behavior: 'smooth'
        });
      }

      updateButtons() {
        const scrollLeft = this.slider.scrollLeft;
        const maxScroll = this.slider.scrollWidth - this.slider.clientWidth;

        this.prevButton.disabled = scrollLeft <= 0;
        this.nextButton.disabled = scrollLeft >= maxScroll -1;
      }
    }

    customElements.define('multicolumn-section-{{ ai_gen_id }}', MulticolumnSection{{ ai_gen_id }});
  })();
</script>

{% schema %}
{
  "name": "Multicolumn section",
  "settings": [
    {
      "type": "header",
      "content": "Section"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Multicolumn"
    },
    {
      "type": "select",
      "id": "heading_alignment",
      "label": "Heading alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "select",
      "id": "layout_type",
      "label": "Layout",
      "options": [
        {
          "value": "grid",
          "label": "Grid"
        },
        {
          "value": "slider",
          "label": "Slider"
        }
      ],
      "default": "grid"
    },
    {
      "type": "header",
      "content": "Grid layout"
    },
    {
      "type": "range",
      "id": "columns_desktop",
      "min": 1,
      "max": 6,
      "step": 1,
      "label": "Columns on desktop",
      "default": 3
    },
    {
      "type": "select",
      "id": "columns_mobile",
      "label": "Columns on mobile",
      "options": [
        {
          "value": "1",
          "label": "1"
        },
        {
          "value": "2",
          "label": "2"
        }
      ],
      "default": "1"
    },
    {
      "type": "header",
      "content": "Slider layout"
    },
    {
      "type": "range",
      "id": "slide_width",
      "min": 200,
      "max": 400,
      "step": 20,
      "unit": "px",
      "label": "Slide width on desktop",
      "default": 300
    },
    {
      "type": "range",
      "id": "slide_width_mobile",
      "min": 150,
      "max": 300,
      "step": 10,
      "unit": "px",
      "label": "Slide width on mobile",
      "default": 250
    },
    {
      "type": "header",
      "content": "Content"
    },
    {
      "type": "select",
      "id": "content_alignment",
      "label": "Content alignment",
      "options": [
        {
          "value": "left",
          "label": "Left"
        },
        {
          "value": "center",
          "label": "Center"
        },
        {
          "value": "right",
          "label": "Right"
        }
      ],
      "default": "center"
    },
    {
      "type": "range",
      "id": "column_gap",
      "min": 10,
      "max": 60,
      "step": 5,
      "unit": "px",
      "label": "Column gap",
      "default": 30
    },
    {
      "type": "header",
      "content": "Images"
    },
    {
      "type": "range",
      "id": "image_width",
      "min": 80,
      "max": 300,
      "step": 10,
      "unit": "px",
      "label": "Image width",
      "default": 150
    },
    {
      "type": "range",
      "id": "image_height",
      "min": 80,
      "max": 300,
      "step": 10,
      "unit": "px",
      "label": "Image height",
      "default": 150
    },
    {
      "type": "range",
      "id": "image_spacing",
      "min": 10,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Image bottom spacing",
      "default": 20
    },
    {
      "type": "range",
      "id": "image_border_radius",
      "min": 0,
      "max": 40,
      "step": 2,
      "unit": "px",
      "label": "Image border radius",
      "default": 8
    },
    {
      "type": "header",
      "content": "Typography"
    },
    {
      "type": "range",
      "id": "heading_size",
      "min": 16,
      "max": 48,
      "step": 2,
      "unit": "px",
      "label": "Section heading size",
      "default": 32
    },
    {
      "type": "range",
      "id": "title_size",
      "min": 14,
      "max": 32,
      "step": 1,
      "unit": "px",
      "label": "Column title size",
      "default": 18
    },
    {
      "type": "range",
      "id": "description_size",
      "min": 12,
      "max": 20,
      "step": 1,
      "unit": "px",
      "label": "Description size",
      "default": 14
    },
    {
      "type": "header",
      "content": "Colors"
    },
    {
      "type": "color",
      "id": "background_color",
      "label": "Background",
      "default": "#ffffff"
    },
    {
      "type": "color",
      "id": "text_color",
      "label": "Text",
      "default": "#000000"
    },
    {
      "type": "header",
      "content": "Spacing"
    },
    {
      "type": "range",
      "id": "section_padding_top",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Top padding",
      "default": 60
    },
    {
      "type": "range",
      "id": "section_padding_bottom",
      "min": 0,
      "max": 100,
      "step": 4,
      "unit": "px",
      "label": "Bottom padding",
      "default": 60
    },
    {
      "type": "header",
      "content": "Column1"
    },
    {
      "type": "checkbox",
      "id": "column_1_enabled",
      "label": "Enable column 1",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "column_1_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "column_1_title",
      "label": "Title",
      "default": "Column 1"
    },
    {
      "type": "textarea",
      "id": "column_1_description",
      "label": "Description",
      "default": "Pair text with an image to focus on your chosen product, collection, or blog post."
    },
    {
      "type": "header",
      "content": "Column 2"
    },
    {
      "type": "checkbox",
      "id": "column_2_enabled",
      "label": "Enable column 2",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "column_2_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "column_2_title",
      "label": "Title",
      "default": "Column 2"
    },
    {
      "type": "textarea",
      "id": "column_2_description",
      "label": "Description",
      "default": "Pair text with an image to focus on your chosen product, collection, or blog post."
    },
    {
      "type": "header",
      "content": "Column 3"
    },
    {
      "type": "checkbox",
      "id": "column_3_enabled",
      "label": "Enable column 3",
      "default": true
    },
    {
      "type": "image_picker",
      "id": "column_3_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "column_3_title",
      "label": "Title",
      "default": "Column 3"
    },
    {
      "type": "textarea",
      "id": "column_3_description",
      "label": "Description",
      "default": "Pair text with an image to focus on your chosen product, collection, or blog post."
    },
    {
      "type": "header",
      "content": "Column 4"
    },
    {
      "type": "checkbox",
      "id": "column_4_enabled",
      "label": "Enable column 4"
    },
    {
      "type": "image_picker",
      "id": "column_4_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "column_4_title",
      "label": "Title",
      "default": "Column 4"
    },
    {
      "type": "textarea",
      "id": "column_4_description",
      "label": "Description",
      "default": "Pair text with an image to focus on your chosen product, collection, or blog post."
    },
    {
      "type": "header",
      "content": "Column 5"
    },
    {
      "type": "checkbox",
      "id": "column_5_enabled",
      "label": "Enable column 5"
    },
    {
      "type": "image_picker",
      "id": "column_5_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "column_5_title",
      "label": "Title",
      "default": "Column 5"
    },
    {
      "type": "textarea",
      "id": "column_5_description",
      "label": "Description",
      "default": "Pair text with an image to focus on your chosen product, collection, or blog post."
    },
    {
      "type": "header",
      "content": "Column 6"
    },
    {
      "type": "checkbox",
      "id": "column_6_enabled",
      "label": "Enable column 6"
    },
    {
      "type": "image_picker",
      "id": "column_6_image",
      "label": "Image"
    },
    {
      "type": "text",
      "id": "column_6_title",
      "label": "Title",
      "default": "Column 6"
    },
    {
      "type": "textarea",
      "id": "column_6_description",
      "label": "Description",
      "default": "Pair text with an image to focus on your chosen product, collection, or blog post."
    }
  ],
  "presets": [
    {
      "name": "Multicolumn section"
    }
  ],
  "tag": null
}
{% endschema %}